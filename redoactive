if [ -a $1/qm_opt_energies.dat ]; then

if [ $6 ]; then
numresidues=4
addedres=$3\_$4\_$5\_$6
elif [ $5 ]; then
numresidues=3
addedres=$3\_$4\_$5
elif [ $4 ]; then
numresidues=2
addedres=$3\_$4
elif [ $3 ]; then
numresidues=1
addedres=$3
fi


if [[ -d $1\_$addedres/ ]]; then rm -r $1\_$addedres; fi


mkdir $1\_$addedres

cat $1/qm_opt_energies.dat | tail -10 > $1\_$addedres/qm_opt_energies.dat

num1=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 1 | tail -1`
num2=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 2 | tail -1`
num3=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 3 | tail -1`
num4=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 4 | tail -1`
num5=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 5 | tail -1`
num6=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 6 | tail -1`
num7=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 7 | tail -1`
num8=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 8 | tail -1`
num9=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 9 | tail -1`
num10=`cat $1/qm_opt_energies.dat | tail -10 | awk -F" " '{print $1}' | head -n 10 | tail -1`

mkdir $1\_$addedres/Iteration_$num1
mkdir $1\_$addedres/Iteration_$num2
mkdir $1\_$addedres/Iteration_$num3
mkdir $1\_$addedres/Iteration_$num4
mkdir $1\_$addedres/Iteration_$num5
mkdir $1\_$addedres/Iteration_$num6
mkdir $1\_$addedres/Iteration_$num7
mkdir $1\_$addedres/Iteration_$num8
mkdir $1\_$addedres/Iteration_$num9
mkdir $1\_$addedres/Iteration_$num10

cp $1/Iteration_$num1/to_next_iteration.pdb $1\_$addedres/Iteration_$num1/to_next_iteration.pdb
cp $1/Iteration_$num2/to_next_iteration.pdb $1\_$addedres/Iteration_$num2/to_next_iteration.pdb
cp $1/Iteration_$num3/to_next_iteration.pdb $1\_$addedres/Iteration_$num3/to_next_iteration.pdb
cp $1/Iteration_$num4/to_next_iteration.pdb $1\_$addedres/Iteration_$num4/to_next_iteration.pdb
cp $1/Iteration_$num5/to_next_iteration.pdb $1\_$addedres/Iteration_$num5/to_next_iteration.pdb
cp $1/Iteration_$num6/to_next_iteration.pdb $1\_$addedres/Iteration_$num6/to_next_iteration.pdb
cp $1/Iteration_$num7/to_next_iteration.pdb $1\_$addedres/Iteration_$num7/to_next_iteration.pdb
cp $1/Iteration_$num8/to_next_iteration.pdb $1\_$addedres/Iteration_$num8/to_next_iteration.pdb
cp $1/Iteration_$num9/to_next_iteration.pdb $1\_$addedres/Iteration_$num9/to_next_iteration.pdb
cp $1/Iteration_$num10/to_next_iteration.pdb $1\_$addedres/Iteration_$num10/to_next_iteration.pdb

cp $1/input $1\_$addedres/

charge=`grep -A 2 " charge " $1/Iteration_$num1/Optimization/job.last | tail -1 | awk -F" " '{print $3}' | awk -F"." '{print $1}'`


if [ -a $1\_$addedres/changecharge ]; then rm $1\_$addedres/changecharge; fi
echo $charge > $1\_$addedres/changecharge

cd $1\_$addedres/

for jj in $3 $4 $5 $6
do

aminoname=${jj:0:3}
aminonum=${jj:3:6}

if [[ $aminoname == ASP ]]; then
printf "#list ASP A%4s CG OD1 OD2\n" $aminonum >> templist
printf "#chop ASP A%4s  CB CG HBX 0.7052\n" $aminonum >> tempchop
printf "#frozen ASP A%4s  CG HBX\n" $aminonum >> tempfrozen
echo "-1" >> changecharge
fi
if [[ $aminoname == LYS ]]; then
printf "#list LYS A%4s NZ HZ1 HZ2 HZ3\n" $aminonum >> templist
printf "#chop LYS A%4s  CE NZ HBX 0.7052\n" $aminonum >> tempchop
printf "#frozen LYS A%4s  NZ HBX\n" $aminonum >> tempfrozen
echo "+1" >> changecharge
fi
if [[ $aminoname == HIS ]]; then
printf "#list HIS A%4s CB CG ND1 HD1 CE1 HE1 NE2 CD2 HD2 HB2 HB3\n" $aminonum >> templist
printf "#chop HIS A%4s  CA CB HBX 0.7052\n" $aminonum >> tempchop
printf "#frozen HIS A%4s  CB HBX\n" $aminonum >> tempfrozen
fi
if [[ $aminoname == GLU ]]; then
printf "#list GLU A%4s CD OE1 OE2\n" $aminonum >> templist
printf "#chop GLU A%4s  CG CD HBX 0.7052\n" $aminonum >> tempchop
printf "#frozen GLU A%4s  CD HBX\n" $aminonum >> tempfrozen
echo "-1" >> changecharge
fi
if [[ $aminoname == TYR ]]; then
printf "#list TYR A%4s HO OH CZ CE1 HCE1 CD1 HCD1 CG CD2 HCD2 CE2 HCE2 CB HCB2 HCB3\n" $aminonum >> templist
printf "#chop TYR A%4s  CA CB HBX 0.7052\n" $aminonum >> tempchop
printf "#frozen TYR A%4s  CB HBX\n" $aminonum >> tempfrozen
fi

done

if [ -a totalcharge ]; then rm totalcharge; fi
forbc=`cat changecharge | tr -d '\n'`
totalcharge=`echo $forbc | bc`

aminoname1=${3:0:3}
aminonum1=${3:3:6}
aminoname2=${4:0:3}
aminonum2=${4:3:6}
aminoname3=${5:0:3}
aminonum3=${5:3:6}
aminoname4=${6:0:3}
aminonum4=${6:3:6}

if [ $3 ]; then printf "\"$aminoname1 A%4s\" " $aminonum1 >> addedresidues; fi
if [ $4 ]; then printf "\"$aminoname2 A%4s\" " $aminonum2 >> addedresidues; fi
if [ $5 ]; then printf "\"$aminoname3 A%4s\" " $aminonum3 >> addedresidues; fi
if [ $6 ]; then printf "\"$aminoname4 A%4s\" " $aminonum4 >> addedresidues; fi

grep "export reslist" input | sed 's/)/ /g' > _input
sed -i 's/$//g' _input
cat addedresidues >> _input
echo ")" >> _input
tr -d '\n' < _input > __input
echo " " >> __input
echo " " >> __input
grep "#list" input >> __input
cat templist >> __input
echo " " >> __input
grep "#chop" input >> __input
cat tempchop >> __input
echo " " >> __input
grep "#frozen" input >> __input
cat tempfrozen >> __input
echo " " >> __input
grep export input | grep -v reslist >> __input

cd ..

cp $1\_$addedres/__input $1\_$addedres/Iteration_$num1/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num2/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num3/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num4/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num5/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num6/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num7/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num8/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num9/input
cp $1\_$addedres/__input $1\_$addedres/Iteration_$num10/input

for jj in Iteration_$num1 Iteration_$num2 Iteration_$num3 Iteration_$num4 Iteration_$num5 Iteration_$num6 Iteration_$num7 Iteration_$num8 Iteration_$num9 Iteration_$num10; do
cd $1\_$addedres/$jj/
extract_qm.sh to_next_iteration.pdb x.pdb
chimera_addh.sh x.pdb h.pdb
echo "sed s/Zn/Zn/ < \$1 > _tmp" > Spec1.sh
echo "mv _tmp \$1" >> Spec1.sh
echo "sed s/Zn/Zn/ < \$1 > _tmp" > Spec2.sh
echo "mv _tmp \$1" >> Spec2.sh
create_coord.sh h.pdb
cp chop.xyz optimized_qm.xyz
quicksp coord $totalcharge
cd ../..
done

fi
