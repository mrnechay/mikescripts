#!/bin/bash

#set -x

# Call this script from an Iteration folder that finished or stopped from qm optimization. it will submit a calculation 

if [ -d finishOptAndNumForce ]; then rm -r finishOptAndNumForce; fi
mkdir finishOptAndNumForce
mkdir finishOptAndNumForce/justResidues

# cp .qmdmd and .mtm files
qmdmddirectory=`pwd | awk -F"/" '{print $(NF-1)}'`
if [ -f ../$qmdmddirectory.mtm ]; then cp ../$qmdmddirectory.mtm justSubstrateAndNumForce.mtm
elif [ -f ../../$qmdmddirectory.mtm ]; then cp ../../$qmdmddirectory.mtm justSubstrateAndNumForce.mtm; fi
if [ -f ../$qmdmddirectory.qmdmd ]; then cp ../$qmdmddirectory.qmdmd justSubstrateAndNumForce.qmdmd
elif [ -f ../../$qmdmddirectory.qmdmd ]; then cp ../../$qmdmddirectory.qmdmd justSubstrateAndNumForce.qmdmd; fi


### which atoms will we need to freeze to keep only the substrate mobile during NumForce?
cp ../input ./
if [ -f input2 ]; then rm input2; fi
grep 'reslist' input >> input2
echo " " >> input2
grep '#list' input >> input2
echo " " >> input2
grep '#chop' input >> input2
echo " " >> input2
grep '#frozen' input >> input2
grep '#list' input | grep -v "SUB" | sed s/list/frozen/g >> input2
echo " " >> input2
grep "=" input | grep -v "reslist" >> input2
mv input2 input
mergeFrozen.py input
mv input2 input
extract_qm.sh new.pdb x.pdb >> qmdmdsetup.log 2>>qmdmdsetup.err
chimera_addh.sh x.pdb h.pdb >> qmdmdsetup.log 2>>qmdmdsetup.err
create_coord.sh h.pdb >> qmdmdsetup.log

rm input
rm h.pdb
rm x.pdb


frozenRes=`getFrozenNum.py coord`
############ Finished determining atom numbers for all residue atoms

### qm region charge:
qmCharge=`grep -A 5 "       charge     " Optimization/job.last | head -n +3 | tail -1 | awk -F" " '{print $NF}' | awk -F"." '{print $1}'`
substrateCharge=`cat justSubstrateAndNumForce.qmdmd | grep "  substrate charge" | awk -F" " '{print $NF}'`
proteinCharge=$(($qmCharge-$substrateCharge))
### Assuming the multiplicity comes from the metal:
metalMultiplicity=`cat justSubstrateAndNumForce.qmdmd | grep "  multiplicity" | awk -F" " '{print $NF}'`

# Get mtm file ready
cp justSubstrateAndNumForce.mtm finishOptAndNumForce/justResidues/justResidues.mtm
echo "  charge                = $proteinCharge" >> finishOptAndNumForce/justResidues/justResidues.mtm
echo "  multiplicity          = $metalMultiplicity" >> finishOptAndNumForce/justResidues/justResidues.mtm

cp Optimization/* ./finishOptAndNumForce/
if [ -f ./finishOptAndNumForce/script.sh ]; then rm ./finishOptAndNumForce/script.sh; fi
cd finishOptAndNumForce/
if [ ! -f ./otherscript.sh ]; then cp /u/home/m/mnechay/mikescripts/otherscript.sh ./; fi
echo "jobex -c 500 -ri -energy 5 -gcart 2 -gexp 2" >> script.sh
echo "genMFILE" >> script.sh
echo "freezeatoms $frozenRes" >> script.sh
echo "NumForce -ri -level $functional -central -frznuclei -mfile MFILE > numforce.out" >> script.sh
echo 'echo "\$coord" >> justResidues/coord' >> script.sh
echo 'cat coord | egrep "[a-z] +f$" >> justResidues/coord' >> script.sh
echo 'echo "\$end" >> justResidues/coord' >> script.sh
echo 'cd justResidues' >> script.sh
echo 'performturbomole coord' >> script.sh
echo 'newfolder=`echo */ | sed s:/::g`' >> script.sh
echo 'cp $newfolder/* ./' >> script.sh
echo 'rm -r $newfolder' >> script.sh
echo 'ridft >> ridft.out' >> script.sh
echo 'cd ../' >> script.sh
runturbomole.mine.2 -N 8 -t 24 -type 8 otherscript.sh
cd ../

