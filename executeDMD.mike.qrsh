#!/bin/bash

cd $1

source QMDMD_Defaults.sh
source ./input
source functions_gen.sh

# $2 Idealize the DMD constrains
# $3 Temperature
# $4 Heat_x_c 
# $5 Time
# $6 Frame save

xDMD=false
b_restart=false
b_idealize=$idealize
f_temp=$Ti
f_heatxc=0.1
n_time=$MAX_TIME
f_movie_dt=$f_movie_dt


if $b_restart ;
then
    echo
    echo "DMD will restart based on the info in the file restart"
    #echo "I mv restart into state"
    mv "restart" state

else
    

    ###
    # This utility prepares input files for simulation.
    # Its input are:
    # 1 - directory with force-field and topology parameter files
    # 2 - input protein structure
    # 3 - input ligand topology file (it references 1 or more ligands structure files)
    # 4 - cell size
    # 5 - output file of force field parameters for this system
    # 6 - output file with initial atom coordinates and velocities
    # 7 - random seed (optional)
    # 8 - input file with additional constraints put on atoms (can be empty)
    # 9 - output file for force field parameters reflecting constraints from input 8.
    #
    # This program crashes at the end because of the bug that nobody cares to fix,
    # because it happens after the output is produced. So ignore it...
    ###
    if $b_idealize ;
    then
        complex-1.linux -P $parameters -I new.pdb -T topparam.list -D 200 -p param -s state -S 123 -C inConstr  -c outConstr --idealize  >> qrsh.log 2>> dmd.err
    else
        complex-1.linux -P $parameters -I new.pdb -T topparam.list -D 200 -p param -s state -S 123 -C inConstr  -c outConstr >> qrsh.log 2>> dmd.err
    fi
fi


##e
# This is the actual simulation program. It takes files produced on previous
# step as an input, and also needs additional configuration file
# that specifies output file names, out frequency, temperature, run length, etc.
# It produces 3 output files:
# echo - Energy
# movie - Trajectory
# restart - Checkpoints
###

# the input file for DMD is updated here to change temperature etc.

if [ -f start.x ]; then rm start.x; fi
cat <<EOF >> start.x
THERMOSTAT               ANDERSON
T_NEW                    $f_temp
T_LIMIT                  $f_temp
HEAT_X_C                 $f_heatxc
RESTART_FILE             restart
RESTART_DT               10
ECHO_FILE                echo
ECHO_DT                  10
MOVIE_FILE               movie
START_TIME               0
MOVIE_DT                 $f_movie_dt
MAX_TIME                 $n_time
EOF
   
echo "Starting a very quick DMD simulation to hopefully relieve any clashes. You should be in a qrsh session."
   
if $xDMD ;
then
    xDMD.linux -i start.x -s state -p param -c outConstr &>> dmd.err
else
    ydmd.linux -i start.x -s state -p param -c outConstr -m $dmd_cores &>> dmd.err
fi

echo " almost done! "
complex_M2P.linux $parameters new.pdb topparam.list movie movie.pdb inConstr  &>> dmd.err
echo
